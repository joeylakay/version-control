What happens when you initialize a repository?

it adds the .git configuration file to the repo.


Why do you need to do it?

without the .git file, we won't be able to track changes in the repo using git.


How is the staging area different from the working directory and the repository?

The staging area is where you put files you are ready to add or remove to a commit

What value do you think it offers?

It's value is to allow you to make multiple changes to a variety of files that might be
contained in a conceptual change to the codebase.

How can you use the staging area to make sure you have one commit per logical change?

Since a logical change can often incorporate many changes in several files, having a storehouse containing all those changes before commiting is handy.

What are some situations when branches would be helpful in keeping your history organized?

When I want to make an experimental change from the master branch or create different version of the application.

How would branches help?

By separating the diffences and test code, we can leave a working application untouched while testing improvements and revisions.


How do the diagrams help you visualize the branch structure?


Since branching and reachability is sometimes non-linear, it is easier to visually represent the map of the commit history.


What is the result of merging two branches together?

combining all changes and commit info to the codebase into a single merged branch.

Why do we represent it in the diagram the way we do?

it is analogous to a tree growing and diverging and re-merging.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

pros...identifies all changes between your branch and the other branch.  cons...sometimes the alerts will happen on code that isn't a conflict.



